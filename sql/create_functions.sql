DECLARE maxDegree BIGINT; BEGIN SELECT max(degree) FROM polynomial INTO maxDegree; RETURN maxDegree; END; DECLARE maxCode BIGINT; BEGIN SELECT max(code) FROM polynomial WHERE degree=(SELECT getMaxDegree()) INTO maxCode; RETURN maxCode; END;CREATE FUNCTION numberOfRootsLogged(poly_id BIGINT) RETURNS INTEGER AS $$ BEGIN RETURN (SELECT SUM(multiplicity) FROM root WHERE polynomial_id = poly_id); END; $$ LANGUAGE PLPGSQL;CREATE FUNCTION degreeOfPolynomial(poly_id BIGINT) RETURNS INTEGER AS $$ BEGIN RETURN (SELECT degree FROM polynomial WHERE id = poly_id); END; $$ LANGUAGE PLPGSQL;CREATE FUNCTION polynomialIsComplete(poly_id BIGINT) RETURNS BOOLEAN AS $$ BEGIN RETURN degreeOfPolynomial(poly_id) = numberOfRootsLogged(poly_id); END; $$ LANGUAGE PLPGSQL;CREATE FUNCTION globalPolynomialCountOf(cn_id BIGINT) RETURNS INTEGER AS $$ BEGIN RETURN (SELECT COUNT(multiplicity) FROM root WHERE complex_number_id = cn_id); End; $$ LANGUAGE PLPGSQL; CREATE FUNCTION globalMultiplicityOf(cn_id BIGINT) RETURNS INTEGER AS $$ BEGIN RETURN (SELECT SUM(multiplicity) FROM root WHERE complex_number_id = cn_id); End; $$ LANGUAGE PLPGSQL;CREATE FUNCTION purgePolynomial(poly_id BIGINT) RETURNS VOID AS $$ BEGIN DELETE FROM root WHERE polynomial_id = poly_id; DELETE FROM polynomial WHERE id = poly_id; END; $$ LANGUAGE PLPGSQL;
